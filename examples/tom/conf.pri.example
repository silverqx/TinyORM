# Dependencies include and library paths
# ---

disable_autoconf {
#    load(private/tiny_system_includepath)
    load(private/tiny_find_packages)
}

# MinGW
win32-g++|win32-clang-g++ {
    # Enable ccache wrapper
#    CONFIG *= ccache

    # Prefer LLD linker for Clang
    # CONFIG *= use_lld_linker does not work on MinGW
    clang: QMAKE_LFLAGS *= -fuse-ld=lld

    # Nothing to do, auto-configuration is enabled
    !disable_autoconf: return()

    # Includes
    # vcpkg - range-v3 and tabulate
    tiny_find_vcpkg()
#    tiny_find_vcpkg($$quote(C:/msys64/home/xyz/Code/vcpkg/), x64-mingw-dynamic)
#    tiny_add_system_includepath(\
#        $$quote(C:/msys64/home/xyz/Code/vcpkg/installed/x64-mingw-dynamic/include/))
}

# Windows (excluding MinGW)
else:win32-msvc|win32-clang-msvc {
    # Enable ccache wrapper
#    CONFIG *= ccache

    # Nothing to do, auto-configuration is enabled
    !disable_autoconf: return()

    # Includes
    # vcpkg - range-v3 and tabulate
    tiny_find_vcpkg()
#    tiny_find_vcpkg($$quote(E:/xyz/vcpkg/), x64-windows)
#    tiny_add_system_includepath($$quote(E:/xyz/vcpkg/installed/x64-windows/include/))
}

# Unix
else:unix {
    # Prefer LLD linker for Clang
    clang: CONFIG *= use_lld_linker
    else: CONFIG *= use_gold_linker

    # Or use mold linker
#    QMAKE_LFLAGS *= -fuse-ld=mold

    # Nothing to do, auto-configuration is enabled
    !disable_autoconf: return()

    # Includes
    # vcpkg - range-v3 and tabulate
    tiny_find_vcpkg()
#    tiny_find_vcpkg($$quote(/home/xyz/Code/c/vcpkg/installed/x64-linux/include/), \
#                    x64-linux)
#    tiny_add_system_includepath(\
#        $$quote(/home/xyz/Code/c/vcpkg/installed/x64-linux/include/))
}
